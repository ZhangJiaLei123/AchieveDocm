<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.sys.dao.UserPostDao">
    
	<sql id="userPostColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.user_id AS "userId",
		a.post_id AS "postId",
		a.post_type AS "postType",
		a.post_level AS "postLevel",
		a.is_default AS "isDefault",a.order_num AS orderNum,
		tpi.name AS  "postName",
		tpt.name AS  "postTypeName",
		tpl.name AS  "postLevelName"
	</sql>
	
	<sql id="userPostJoins">
		left join t_post_info tpi on tpi.id = a.post_id
		left join t_post_type tpt on tpt.id = a.post_type
		left join t_post_level tpl on tpl.id = a.post_level
	</sql>
	
    
	<select id="get" resultType="UserPost" >
		SELECT 
			<include refid="userPostColumns"/>
		FROM sys_user_post a
		<include refid="userPostJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserPost" >
		SELECT 
			<include refid="userPostColumns"/>
		FROM sys_user_post a
		<include refid="userPostJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<if test="postId != null and postId != ''">
				AND a.post_id = #{postId}
			</if>
			<if test="postType != null and postType != ''">
				AND a.post_type = #{postType}
			</if>
			<if test="postLevel != null and postLevel != ''">
				AND a.post_level = #{postLevel}
			</if>
			<if test="isDefault != null and isDefault != ''">
				AND a.is_default = #{isDefault}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.is_default DESC , a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findListMap" resultType="Map" >
		SELECT 
			<include refid="userPostColumns"/>
		FROM sys_user_post a
		<include refid="userPostJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
				AND a.user_id = #{userId}
		</where>
		<choose>
			<otherwise>
				order by a.order_num asc,a.is_default desc ,a.update_date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UserPost" >
		SELECT 
			<include refid="userPostColumns"/>
		FROM sys_user_post a
		<include refid="userPostJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_user_post(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			user_id,
			post_id,
			post_type,
			post_level,
			is_default,order_num
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{userId},
			#{postId},
			#{postType},
			#{postLevel},
			#{isDefault},#{orderNum}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_user_post SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			user_id = #{userId},
			post_id = #{postId},
			post_type = #{postType},
			post_level = #{postLevel},
			is_default = #{isDefault}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM sys_user_post
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE sys_user_post SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
		<!--删除用户岗位信息-->
	<update id="deleteByUserId">
		delete from sys_user_post 
		WHERE user_id = #{userId}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="UserPost" statementType="STATEMENT">
		select * FROM sys_user_post  where ${propertyName} = '${value}'
	</select>
	
</mapper>